<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="TimePickerComponent" constructor="TimePickerComp" version="0.0.2" display-name-key="TimePickerComponent" description-key="Time Picker Component with React UI" control-type="standard" >
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->
    <property name="Label" display-name-key="Title" description-key="Name of Control" of-type="SingleLine.Text" usage="bound" required="true" default-value="Date And Time Picker"/>
    <property name="dateProperty" display-name-key="Date Format" description-key="Date Format of Control" of-type="DateAndTime.DateAndTime" default-value="2021-01-01T00:00:00.000Z" usage="bound" />
    <property name="TimePickerMinuteStepper" display-name-key="Minutes Stepper" description-key="Range from which the available minutes can be chosen" of-type="Whole.None" usage="bound" default-value= "15"/>
    <property name="PrimaryColor" display-name-key="Primary Color" description-key="Primary Color of Control" of-type="SingleLine.Text" usage="bound" required="true" default-value="#4287f5"/>
    <property name="SecondaryColor" display-name-key="Secondary Color" description-key="Secondary Color of Control" of-type="SingleLine.Text" usage="bound" required="true" default-value="#ffffff"/>    
    <property name ="Dialog" display-name-key="Dialog" description-key="Dialog to show selectionables buttons" of-type="TwoOptions" default-value="dialog" usage="bound" required="true" >
      <value name="Entity" display-name-key="Entity" description-key="Entity names">dialog</value>
      <value name="Attribute" display-name-key="Attribute" description-key="Attributes for an entity" >inline</value>
    </property> 
    <property name ="AmPm" display-name-key="Am-Pm" description-key="Am-Pm option or 24 h option format" of-type="TwoOptions" default-value="false" usage="bound" required="true" >
      <value name="AmPmTrue" display-name-key="AmPmTrue" description-key="Am-Pm option active" >true</value>
      <value name="AmPmFalse" display-name-key="AmPmFalse" description-key="Am-Pm option desactive" >false</value>
    </property> 

  <!-- 
      Property node's of-type attribute can be of-type-group attribute. 
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="true" />
    -->
    <resources>
      <code path="index.ts" order="1"/>
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/TimePickerComp.css" order="1" />
      <resx path="strings/TimePickerComp.1033.resx" version="1.0.0" />
      -->
    </resources>
    <!-- UNCOMMENT TO ENABLE THE SPECIFIED API
    <feature-usage>
      <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" />
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
    -->
  </control>
</manifest>